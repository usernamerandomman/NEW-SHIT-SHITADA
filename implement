public abstract class Conta {
    protected String numero;
    protected double saldo;

    public Conta(String numero, double saldoInicial) {
        this.numero = numero;
        this.saldo = saldoInicial;
    }

    public String getNumero() {
        return numero;
    }

    public double getSaldo() {
        return saldo;
    }

    public void depositar(double valor) {
        saldo += valor;
        System.out.println("Depósito de R$" + valor + " realizado. Novo saldo: R$" + saldo);
    }

    public boolean sacar(double valor) {
        if (saldo >= valor) {
            saldo -= valor;
            System.out.println("Saque de R$" + valor + " realizado. Novo saldo: R$" + saldo);
            return true;
        } else {
            System.out.println("Saldo insuficiente para saque de R$" + valor);
            return false;
        }
    }

    public abstract void transferir(Conta destino, double valor);
}

public class ContaCorrente extends Conta {
    public ContaCorrente(String numero, double saldoInicial) {
        super(numero, saldoInicial);
    }

    @Override
    public void transferir(Conta destino, double valor) {
        if (this.sacar(valor)) {
            destino.depositar(valor);
            System.out.println("Transferência de R$" + valor + " realizada para conta " + destino.getNumero());
        } else {
            System.out.println("Transferência não realizada. Saldo insuficiente.");
        }
    }
}

public class ContaPoupanca extends Conta {
    public ContaPoupanca(String numero, double saldoInicial) {
        super(numero, saldoInicial);
    }

    @Override
    public void transferir(Conta destino, double valor) {
        if (this.sacar(valor)) {
            destino.depositar(valor);
            System.out.println("Transferência de R$" + valor + " realizada para conta " + destino.getNumero());
        } else {
            System.out.println("Transferência não realizada. Saldo insuficiente.");
        }
    }
}

public class BancoApp {
    public static void main(String[] args) {
        ContaCorrente cc1 = new ContaCorrente("001", 1000);
        ContaPoupanca cp1 = new ContaPoupanca("002", 500);

       cc1.depositar(500);
        cc1.sacar(200);
        cp1.depositar(300);
        cp1.sacar(100);

        // Transferência entre contas
        cc1.transferir(cp1, 300);
    }
}
